import { Component } from '@angular/core';
import { BaseColumn } from '../../base-column';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/icon";
import * as i4 from "@angular/material/table";
export class ColumnIconActionComponent extends BaseColumn {
}
ColumnIconActionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.2", ngImport: i0, type: ColumnIconActionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ColumnIconActionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.2", type: ColumnIconActionComponent, selector: "elix-column-icon-action", providers: [{ provide: BaseColumn, useExisting: ColumnIconActionComponent }], usesInheritance: true, ngImport: i0, template: "<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>{{\n    name\n  }}</mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n    <ng-container *ngFor=\"let action of element.actions\">\n      <button\n        mat-button\n        (click)=\"action.method(element)\"\n        [class]=\"action.classCss\"\n      >\n        <mat-icon [svgIcon]=\"action.iconClass\"></mat-icon>\n      </button>\n    </ng-container>\n  </mat-cell>\n  <mat-footer-cell *matFooterCellDef>\n    {{ footerMessage }}\n  </mat-footer-cell>\n</ng-container>\n", styles: [""], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i2.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i3.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i4.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i4.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i4.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i4.MatFooterCellDef, selector: "[matFooterCellDef]" }, { kind: "directive", type: i4.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i4.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "directive", type: i4.MatFooterCell, selector: "mat-footer-cell, td[mat-footer-cell]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.2", ngImport: i0, type: ColumnIconActionComponent, decorators: [{
            type: Component,
            args: [{ selector: 'elix-column-icon-action', providers: [{ provide: BaseColumn, useExisting: ColumnIconActionComponent }], template: "<ng-container [matColumnDef]=\"field\">\n  <mat-header-cell [class]=\"className\" mat-header-cell *matHeaderCellDef>{{\n    name\n  }}</mat-header-cell>\n  <mat-cell [class]=\"className\" mat-cell *matCellDef=\"let element\">\n    <ng-container *ngFor=\"let action of element.actions\">\n      <button\n        mat-button\n        (click)=\"action.method(element)\"\n        [class]=\"action.classCss\"\n      >\n        <mat-icon [svgIcon]=\"action.iconClass\"></mat-icon>\n      </button>\n    </ng-container>\n  </mat-cell>\n  <mat-footer-cell *matFooterCellDef>\n    {{ footerMessage }}\n  </mat-footer-cell>\n</ng-container>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLWljb24tYWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1saWJ1cmcvc3JjL2xpYi90YWJsZS9jb2x1bW5zL2NvbHVtbi1pY29uLWFjdGlvbi9jb2x1bW4taWNvbi1hY3Rpb24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWxpYnVyZy9zcmMvbGliL3RhYmxlL2NvbHVtbnMvY29sdW1uLWljb24tYWN0aW9uL2NvbHVtbi1pY29uLWFjdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7Ozs7O0FBUS9DLE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxVQUFVOztzSEFBNUMseUJBQXlCOzBHQUF6Qix5QkFBeUIsa0RBRnpCLENBQUMsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSx5QkFBeUIsRUFBRSxDQUFDLGlEQ1A5RSx5bkJBbUJBOzJGRFZhLHlCQUF5QjtrQkFOckMsU0FBUzsrQkFDRSx5QkFBeUIsYUFHeEIsQ0FBQyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVywyQkFBMkIsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlQ29sdW1uIH0gZnJvbSAnLi4vLi4vYmFzZS1jb2x1bW4nO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdlbGl4LWNvbHVtbi1pY29uLWFjdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb2x1bW4taWNvbi1hY3Rpb24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9jb2x1bW4taWNvbi1hY3Rpb24uY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBCYXNlQ29sdW1uLCB1c2VFeGlzdGluZzogQ29sdW1uSWNvbkFjdGlvbkNvbXBvbmVudCB9XSxcbn0pXG5leHBvcnQgY2xhc3MgQ29sdW1uSWNvbkFjdGlvbkNvbXBvbmVudCBleHRlbmRzIEJhc2VDb2x1bW4ge31cbiIsIjxuZy1jb250YWluZXIgW21hdENvbHVtbkRlZl09XCJmaWVsZFwiPlxuICA8bWF0LWhlYWRlci1jZWxsIFtjbGFzc109XCJjbGFzc05hbWVcIiBtYXQtaGVhZGVyLWNlbGwgKm1hdEhlYWRlckNlbGxEZWY+e3tcbiAgICBuYW1lXG4gIH19PC9tYXQtaGVhZGVyLWNlbGw+XG4gIDxtYXQtY2VsbCBbY2xhc3NdPVwiY2xhc3NOYW1lXCIgbWF0LWNlbGwgKm1hdENlbGxEZWY9XCJsZXQgZWxlbWVudFwiPlxuICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGFjdGlvbiBvZiBlbGVtZW50LmFjdGlvbnNcIj5cbiAgICAgIDxidXR0b25cbiAgICAgICAgbWF0LWJ1dHRvblxuICAgICAgICAoY2xpY2spPVwiYWN0aW9uLm1ldGhvZChlbGVtZW50KVwiXG4gICAgICAgIFtjbGFzc109XCJhY3Rpb24uY2xhc3NDc3NcIlxuICAgICAgPlxuICAgICAgICA8bWF0LWljb24gW3N2Z0ljb25dPVwiYWN0aW9uLmljb25DbGFzc1wiPjwvbWF0LWljb24+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgPC9tYXQtY2VsbD5cbiAgPG1hdC1mb290ZXItY2VsbCAqbWF0Rm9vdGVyQ2VsbERlZj5cbiAgICB7eyBmb290ZXJNZXNzYWdlIH19XG4gIDwvbWF0LWZvb3Rlci1jZWxsPlxuPC9uZy1jb250YWluZXI+XG4iXX0=