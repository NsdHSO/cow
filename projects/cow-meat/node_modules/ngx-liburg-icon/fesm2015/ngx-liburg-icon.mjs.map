{"version":3,"file":"ngx-liburg-icon.mjs","sources":["../../../projects/ngx-liburg-icon/src/lib/icon-core/icon-core.service.ts","../../../projects/ngx-liburg-icon/src/lib/icon-core/icon-core.module.ts","../../../projects/ngx-liburg-icon/src/lib/spinner/spinner.component.ts","../../../projects/ngx-liburg-icon/src/lib/spinner/spinner.component.html","../../../projects/ngx-liburg-icon/src/lib/spinner/spinner.module.ts","../../../projects/ngx-liburg-icon/src/lib/spinner/util/service/spinner.service.ts","../../../projects/ngx-liburg-icon/src/public-api.ts","../../../projects/ngx-liburg-icon/src/ngx-liburg-icon.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class GlobalErrorHandleService {\n  constructor(private _injectable: Injector) {}\n\n  handleError(error: any) {\n    const routerProperty = this._injectable.get(Router);\n    console.warn(`${routerProperty.url}`);\n\n    if (error instanceof HttpErrorResponse) {\n      console.log(`Error from backend ${error.status}`);\n      console.log(`Response body ${error.message}`);\n    } else {\n      console.warn(`An error occurred ${error.message}`);\n    }\n  }\n}\n","import {ErrorHandler, NgModule} from '@angular/core';\nimport {MatIconRegistry} from '@angular/material/icon';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {GlobalErrorHandleService} from \"./icon-core.service\";\n\n@NgModule({\n  imports: [HttpClientModule, RouterModule],\n  providers: [{provide: ErrorHandler, useClass: GlobalErrorHandleService}],\n})\nexport class IconCoreModule {\n  constructor(\n    private _domSanitizer: DomSanitizer,\n    private _matIconRegistry: MatIconRegistry\n  ) {\n    this._matIconRegistry.addSvgIconSetInNamespace(\n      'fa_brands',\n      this._domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/svgs/brands.svg'\n      )\n    );\n    this._matIconRegistry.addSvgIconSetInNamespace(\n      'fa_regular',\n      this._domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/svgs/regular.svg'\n      )\n    );\n    this._matIconRegistry.addSvgIconSetInNamespace(\n      'fa_solid',\n      this._domSanitizer.bypassSecurityTrustResourceUrl(\n        'assets/icons/svgs/solid.svg'\n      )\n    );\n  }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n             selector   : 'lib-spinner',\n             templateUrl: './spinner.component.html',\n             styleUrls  : ['./spinner.component.scss'],\n           })\nexport class SpinnerComponent {\n}\n","<div class=\"spinner\">\n  <mat-icon\n    [svgIcon]=\"'fa_brands:ion'\"\n    class=\"spinner-rotation\"\n  ></mat-icon>\n</div>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {SpinnerComponent} from './spinner.component';\n\n@NgModule({\n            declarations: [\n              SpinnerComponent,\n            ],\n            imports     : [\n              CommonModule,\n              MatIconModule,\n            ],\n            exports     : [\n              SpinnerComponent,\n            ],\n          })\nexport class SpinnerModule {}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n              providedIn: 'root',\n            })\nexport class SpinnerService {\n  private _isLoading : BehaviorSubject<any> = new BehaviorSubject<boolean>(false);\n  public get isLoading() : BehaviorSubject<boolean> {\n    return this._isLoading;\n  }\n\n  public set isLoading(value : BehaviorSubject<boolean>) {\n    this._isLoading = value;\n  }\n\n  public sendValue(value : boolean) {\n    this._isLoading.next(value);\n  }\n}\n","/*\n * Public API Surface of ngx-liburg-icon\n */\n\n// export * from './lib/ngx-liburg-icon.service';\n// export * from './lib/ngx-liburg-icon.component';\n// export * from './lib/ngx-liburg-icon.module';\nexport * from './lib/icon-core/icon-core.service'\nexport * from './lib/icon-core/icon-core.module'\nexport * from './lib/spinner/spinner.component'\nexport * from './lib/spinner/spinner.module'\nexport * from './lib/spinner/util/service/spinner.service'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}