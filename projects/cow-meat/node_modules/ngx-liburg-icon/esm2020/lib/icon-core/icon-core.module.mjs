import { ErrorHandler, NgModule } from '@angular/core';
import { HttpClientModule } from '@angular/common/http';
import { RouterModule } from '@angular/router';
import { GlobalErrorHandleService } from "./icon-core.service";
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
import * as i2 from "@angular/material/icon";
export class IconCoreModule {
    constructor(_domSanitizer, _matIconRegistry) {
        this._domSanitizer = _domSanitizer;
        this._matIconRegistry = _matIconRegistry;
        this._matIconRegistry.addSvgIconSetInNamespace('fa_brands', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/svgs/brands.svg'));
        this._matIconRegistry.addSvgIconSetInNamespace('fa_regular', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/svgs/regular.svg'));
        this._matIconRegistry.addSvgIconSetInNamespace('fa_solid', this._domSanitizer.bypassSecurityTrustResourceUrl('assets/icons/svgs/solid.svg'));
    }
}
IconCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: IconCoreModule, deps: [{ token: i1.DomSanitizer }, { token: i2.MatIconRegistry }], target: i0.ɵɵFactoryTarget.NgModule });
IconCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.3", ngImport: i0, type: IconCoreModule, imports: [HttpClientModule, RouterModule] });
IconCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: IconCoreModule, providers: [{ provide: ErrorHandler, useClass: GlobalErrorHandleService }], imports: [HttpClientModule, RouterModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: IconCoreModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [HttpClientModule, RouterModule],
                    providers: [{ provide: ErrorHandler, useClass: GlobalErrorHandleService }],
                }]
        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }, { type: i2.MatIconRegistry }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1jb3JlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1saWJ1cmctaWNvbi9zcmMvbGliL2ljb24tY29yZS9pY29uLWNvcmUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxZQUFZLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBR3JELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3RELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQzs7OztBQU03RCxNQUFNLE9BQU8sY0FBYztJQUN6QixZQUNVLGFBQTJCLEVBQzNCLGdCQUFpQztRQURqQyxrQkFBYSxHQUFiLGFBQWEsQ0FBYztRQUMzQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWlCO1FBRXpDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyx3QkFBd0IsQ0FDNUMsV0FBVyxFQUNYLElBQUksQ0FBQyxhQUFhLENBQUMsOEJBQThCLENBQy9DLDhCQUE4QixDQUMvQixDQUNGLENBQUM7UUFDRixJQUFJLENBQUMsZ0JBQWdCLENBQUMsd0JBQXdCLENBQzVDLFlBQVksRUFDWixJQUFJLENBQUMsYUFBYSxDQUFDLDhCQUE4QixDQUMvQywrQkFBK0IsQ0FDaEMsQ0FDRixDQUFDO1FBQ0YsSUFBSSxDQUFDLGdCQUFnQixDQUFDLHdCQUF3QixDQUM1QyxVQUFVLEVBQ1YsSUFBSSxDQUFDLGFBQWEsQ0FBQyw4QkFBOEIsQ0FDL0MsNkJBQTZCLENBQzlCLENBQ0YsQ0FBQztJQUNKLENBQUM7OzJHQXZCVSxjQUFjOzRHQUFkLGNBQWMsWUFIZixnQkFBZ0IsRUFBRSxZQUFZOzRHQUc3QixjQUFjLGFBRmQsQ0FBQyxFQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLHdCQUF3QixFQUFDLENBQUMsWUFEOUQsZ0JBQWdCLEVBQUUsWUFBWTsyRkFHN0IsY0FBYztrQkFKMUIsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZLENBQUM7b0JBQ3pDLFNBQVMsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsd0JBQXdCLEVBQUMsQ0FBQztpQkFDekUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Vycm9ySGFuZGxlciwgTmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtNYXRJY29uUmVnaXN0cnl9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2ljb24nO1xuaW1wb3J0IHtEb21TYW5pdGl6ZXJ9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHtIdHRwQ2xpZW50TW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQge1JvdXRlck1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7R2xvYmFsRXJyb3JIYW5kbGVTZXJ2aWNlfSBmcm9tIFwiLi9pY29uLWNvcmUuc2VydmljZVwiO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbSHR0cENsaWVudE1vZHVsZSwgUm91dGVyTW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IEVycm9ySGFuZGxlciwgdXNlQ2xhc3M6IEdsb2JhbEVycm9ySGFuZGxlU2VydmljZX1dLFxufSlcbmV4cG9ydCBjbGFzcyBJY29uQ29yZU1vZHVsZSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgX2RvbVNhbml0aXplcjogRG9tU2FuaXRpemVyLFxuICAgIHByaXZhdGUgX21hdEljb25SZWdpc3RyeTogTWF0SWNvblJlZ2lzdHJ5XG4gICkge1xuICAgIHRoaXMuX21hdEljb25SZWdpc3RyeS5hZGRTdmdJY29uU2V0SW5OYW1lc3BhY2UoXG4gICAgICAnZmFfYnJhbmRzJyxcbiAgICAgIHRoaXMuX2RvbVNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0UmVzb3VyY2VVcmwoXG4gICAgICAgICdhc3NldHMvaWNvbnMvc3Zncy9icmFuZHMuc3ZnJ1xuICAgICAgKVxuICAgICk7XG4gICAgdGhpcy5fbWF0SWNvblJlZ2lzdHJ5LmFkZFN2Z0ljb25TZXRJbk5hbWVzcGFjZShcbiAgICAgICdmYV9yZWd1bGFyJyxcbiAgICAgIHRoaXMuX2RvbVNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0UmVzb3VyY2VVcmwoXG4gICAgICAgICdhc3NldHMvaWNvbnMvc3Zncy9yZWd1bGFyLnN2ZydcbiAgICAgIClcbiAgICApO1xuICAgIHRoaXMuX21hdEljb25SZWdpc3RyeS5hZGRTdmdJY29uU2V0SW5OYW1lc3BhY2UoXG4gICAgICAnZmFfc29saWQnLFxuICAgICAgdGhpcy5fZG9tU2FuaXRpemVyLmJ5cGFzc1NlY3VyaXR5VHJ1c3RSZXNvdXJjZVVybChcbiAgICAgICAgJ2Fzc2V0cy9pY29ucy9zdmdzL3NvbGlkLnN2ZydcbiAgICAgIClcbiAgICApO1xuICB9XG59XG4iXX0=