import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { HttpErrorResponse } from '@angular/common/http';
import * as i0 from "@angular/core";
export class GlobalErrorHandleService {
    constructor(_injectable) {
        this._injectable = _injectable;
    }
    handleError(error) {
        const routerProperty = this._injectable.get(Router);
        console.warn(`${routerProperty.url}`);
        if (error instanceof HttpErrorResponse) {
            console.log(`Error from backend ${error.status}`);
            console.log(`Response body ${error.message}`);
        }
        else {
            console.warn(`An error occurred ${error.message}`);
        }
    }
}
GlobalErrorHandleService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: GlobalErrorHandleService, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });
GlobalErrorHandleService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: GlobalErrorHandleService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: GlobalErrorHandleService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1jb3JlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtbGlidXJnLWljb24vc3JjL2xpYi9pY29uLWNvcmUvaWNvbi1jb3JlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBWSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBR3pELE1BQU0sT0FBTyx3QkFBd0I7SUFDbkMsWUFBb0IsV0FBcUI7UUFBckIsZ0JBQVcsR0FBWCxXQUFXLENBQVU7SUFBRyxDQUFDO0lBRTdDLFdBQVcsQ0FBQyxLQUFVO1FBQ3BCLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3BELE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUV0QyxJQUFJLEtBQUssWUFBWSxpQkFBaUIsRUFBRTtZQUN0QyxPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztZQUNsRCxPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQixLQUFLLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztTQUMvQzthQUFNO1lBQ0wsT0FBTyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7U0FDcEQ7SUFDSCxDQUFDOztxSEFiVSx3QkFBd0I7eUhBQXhCLHdCQUF3QjsyRkFBeEIsd0JBQXdCO2tCQURwQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEdsb2JhbEVycm9ySGFuZGxlU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2luamVjdGFibGU6IEluamVjdG9yKSB7fVxuXG4gIGhhbmRsZUVycm9yKGVycm9yOiBhbnkpIHtcbiAgICBjb25zdCByb3V0ZXJQcm9wZXJ0eSA9IHRoaXMuX2luamVjdGFibGUuZ2V0KFJvdXRlcik7XG4gICAgY29uc29sZS53YXJuKGAke3JvdXRlclByb3BlcnR5LnVybH1gKTtcblxuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEh0dHBFcnJvclJlc3BvbnNlKSB7XG4gICAgICBjb25zb2xlLmxvZyhgRXJyb3IgZnJvbSBiYWNrZW5kICR7ZXJyb3Iuc3RhdHVzfWApO1xuICAgICAgY29uc29sZS5sb2coYFJlc3BvbnNlIGJvZHkgJHtlcnJvci5tZXNzYWdlfWApO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLndhcm4oYEFuIGVycm9yIG9jY3VycmVkICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==